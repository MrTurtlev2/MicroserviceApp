@page "{id:int}"
@model ExersiceModel
@{
    ViewData["Title"] = "ExercisesEdit";
}
@section Scripts {
    <script>
        async function fetchExercises(pupilId) {
            try {
                const response = await fetch(`http://localhost:5000/api/pupils/${pupilId}/exercises`, {
                    method: 'GET',
                    headers: { 'Accept': 'application/json' }
                });

                if (response.ok) {
                    const exercises = await response.json();
                    const tableBody = document.querySelector('table tbody');
                    tableBody.innerHTML = ''; // Wyczyść tabelę

                    exercises.forEach((exercise, index) => {
                        const newRow = document.createElement('tr');
                        newRow.innerHTML = `
                                <td>${index + 1}</td>
                                <td><input type="text" value="${exercise.label}"></td>
                                <td><input type="text" value="${exercise.weight}"></td>
                                <td><input type="text" value="${exercise.reps}"></td>
                                <td><input type="text" value="${exercise.comment}"></td>
                                <td><button class="delete-row">Usuń</button></td>
                            `;
                        tableBody.appendChild(newRow);
                    });

                    attachDeleteHandlers(); // Obsługa usuwania wierszy
                } else {
                    console.error('Błąd odpowiedzi API:', response.statusText);
                }
            } catch (error) {
                console.error("Błąd podczas zapytania:", error);
            }
        }

        // Funkcja do dodawania nowego wiersza do tabeli
        function addNewRow() {
            const tableBody = document.querySelector('table tbody');
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                    <td></td> <!-- Numer wiersza zostanie ustawiony dynamicznie -->
                    <td><input type="text" placeholder="Wpisz ćwiczenie"></td>
                    <td><input type="text" placeholder="Obciążenie"></td>
                    <td><input type="text" placeholder="Powtórzenia"></td>
                    <td><input type="text" placeholder="Uwagi"></td>
                    <td><button class="delete-row">Usuń</button></td>
                `;
            tableBody.appendChild(newRow);

            attachDeleteHandlers(); // Dodaj obsługę usuwania dla nowego wiersza
            updateRowNumbers(); // Zaktualizuj numery wierszy
        }

        // Funkcja do usuwania wiersza
        function attachDeleteHandlers() {
            document.querySelectorAll('.delete-row').forEach(button => {
                button.addEventListener('click', () => {
                    button.closest('tr').remove();
                    updateRowNumbers();
                });
            });
        }

        // Funkcja do aktualizacji numerów wierszy
        function updateRowNumbers() {
            document.querySelectorAll('table tbody tr').forEach((row, index) => {
                row.firstElementChild.textContent = index + 1;
            });
        }

        // Funkcja do zapisania ćwiczeń
        async function saveExercises(pupilId) {
            const tableBody = document.querySelector('table tbody');
            const rows = tableBody.querySelectorAll('tr');
            let exercises = [];

            rows.forEach(row => {
                const cells = row.querySelectorAll('td');
                exercises.push({
                    label: cells[1].querySelector('input').value,
                    weight: cells[2].querySelector('input').value,
                    reps: parseInt(cells[3].querySelector('input').value),
                    comment: cells[4].querySelector('input').value
                });
            });

            try {
                // Wyślij dane na odpowiedni endpoint API
                const response = await fetch(`http://localhost:5000/api/${pupilId}/exercises/add`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(exercises) // Przekazujemy tablicę ćwiczeń
                });

                if (response.ok) {
                    alert("Ćwiczenia zapisane!");
                } else {
                    console.error("Błąd zapisu ćwiczeń:", response.statusText);
                }
            } catch (error) {
                console.error("Błąd podczas zapisu:", error);
            }
        }


        document.addEventListener('DOMContentLoaded', function () {
            const pupilId = @Model.PupilId;
            fetchExercises(pupilId);

            // Obsługuje kliknięcie przycisku "Dodaj ćwiczenie"
            document.querySelector('.add-row').addEventListener('click', function () {
                addNewRow();
            });

            document.querySelector('.save-changes').addEventListener('click', function () {
                saveExercises(pupilId);
            });
        });
    </script>

}

<div class="container">
    <header>
        <h1>Plany Treningowe</h1>
    </header>
    <section class="training-table">
        <table>
            <thead>
                <tr>
                    <th>Część</th>
                    <th>Ćwiczenie</th>
                    <th>Obciążenie</th>
                    <th>Powtórzenia</th>
                    <th>Uwagi</th>
                    <th>Akcje</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <button class="add-row">Dodaj ćwiczenie</button>
        <button class="save-changes">Zapisz zmiany</button>
    </section>
</div>
